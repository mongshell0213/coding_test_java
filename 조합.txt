import java.io.*;
import java.util.*;

class Combination{
    int n;
    int r;
    int[] now;
    ArrayList<ArrayList<Integer>> result;
    Combination(int n,int r){
        this.n=n;
        this.r=r;
        now=new int[r];
        result=new ArrayList<>();
    }
    public ArrayList<ArrayList<Integer>> getResult(){
        return result;
    }
    public void combination(int[] arr,boolean[] visited,int depth,int n,int r){
        if(r==0){
            ArrayList<Integer>temp=new ArrayList<>();
            for(int i=0;i<n;i++){
                if(visited[i]==true){
                    temp.add(arr[i]);
                }
            }
            result.add(temp);
            return;
        }
        if(depth==n)
            return;
        visited[depth]=true;
        combination(arr,visited,depth+1,n,r-1);
        visited[depth]=false;
        combination(arr,visited,depth+1,n,r);
    }
}
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer(br.readLine());
        int n=Integer.parseInt(st.nextToken());
        int r=Integer.parseInt(st.nextToken());
        Combination comb=new Combination(n,r);
        int[] arr=new int[n];
        for(int i=0;i<n;i++)
            arr[i]=i+1;
        boolean[] visited=new boolean[n];
        comb.combination(arr,visited,0,n,r);
        ArrayList<ArrayList<Integer>>result=comb.getResult();
        StringBuilder sb=new StringBuilder();
        for(ArrayList<Integer>temp:result){
            for(int i=0;i<temp.size();i++)
                sb.append(temp.get(i)).append(" ");
            sb.append("\n");
        }
        System.out.println(sb);
    }
}
