import java.io.*;
import java.util.*;
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int n=Integer.parseInt(st.nextToken()); // 노드의 수
        int m=Integer.parseInt(st.nextToken()); // 간선의 수
        int[] parent = new int[n+1]; //부모 테이블
        for(int i=1;i<=n;i++)
            parent[i]=i; //부모 테이블을 각자 노드로 초기화
        for(int i=0;i<m;i++){
            st=new StringTokenizer(br.readLine());
            int a=Integer.parseInt(st.nextToken());
            int b=Integer.parseInt(st.nextToken());
            union(a,b,parent);
        }
        StringBuilder sb=new StringBuilder();
        for(int i=1;i<=n;i++)
            sb.append(find_root(i,parent)).append(' '); //각 원소가 속한 집합 출력
        sb.append('\n');
        for(int i=1;i<=n;i++)
            sb.append(parent[i]).append(' '); //각 원소 부모 출력
        System.out.print(sb);
    }
    static void union(int a,int b,int[] parent){
        a=find_root(a,parent);
        b=find_root(b,parent);
        if(a<b)
            parent[b]=a;
        else parent[a]=b;
    }
    static int find_root(int x,int[] parent){
        if(parent[x]!=x)
            parent[x]= find_root(parent[x],parent);
        return parent[x];
    }

}